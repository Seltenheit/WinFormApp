<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CAQCgXP8PxDqrC6uY3cSAAAAAElFTkSuQmCC
</value>
  </data>
</root>